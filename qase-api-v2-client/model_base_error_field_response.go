/*
Qase.io TestOps API v2

Qase TestOps API v2 Specification.

API version: 2.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2_client

import (
	"encoding/json"
)

// checks if the BaseErrorFieldResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseErrorFieldResponse{}

// BaseErrorFieldResponse struct for BaseErrorFieldResponse
type BaseErrorFieldResponse struct {
	ErrorFields []BaseErrorFieldResponseErrorFieldsInner `json:"errorFields,omitempty"`
}

// NewBaseErrorFieldResponse instantiates a new BaseErrorFieldResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseErrorFieldResponse() *BaseErrorFieldResponse {
	this := BaseErrorFieldResponse{}
	return &this
}

// NewBaseErrorFieldResponseWithDefaults instantiates a new BaseErrorFieldResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseErrorFieldResponseWithDefaults() *BaseErrorFieldResponse {
	this := BaseErrorFieldResponse{}
	return &this
}

// GetErrorFields returns the ErrorFields field value if set, zero value otherwise.
func (o *BaseErrorFieldResponse) GetErrorFields() []BaseErrorFieldResponseErrorFieldsInner {
	if o == nil || IsNil(o.ErrorFields) {
		var ret []BaseErrorFieldResponseErrorFieldsInner
		return ret
	}
	return o.ErrorFields
}

// GetErrorFieldsOk returns a tuple with the ErrorFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseErrorFieldResponse) GetErrorFieldsOk() ([]BaseErrorFieldResponseErrorFieldsInner, bool) {
	if o == nil || IsNil(o.ErrorFields) {
		return nil, false
	}
	return o.ErrorFields, true
}

// HasErrorFields returns a boolean if a field has been set.
func (o *BaseErrorFieldResponse) HasErrorFields() bool {
	if o != nil && !IsNil(o.ErrorFields) {
		return true
	}

	return false
}

// SetErrorFields gets a reference to the given []BaseErrorFieldResponseErrorFieldsInner and assigns it to the ErrorFields field.
func (o *BaseErrorFieldResponse) SetErrorFields(v []BaseErrorFieldResponseErrorFieldsInner) {
	o.ErrorFields = v
}

func (o BaseErrorFieldResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseErrorFieldResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorFields) {
		toSerialize["errorFields"] = o.ErrorFields
	}
	return toSerialize, nil
}

type NullableBaseErrorFieldResponse struct {
	value *BaseErrorFieldResponse
	isSet bool
}

func (v NullableBaseErrorFieldResponse) Get() *BaseErrorFieldResponse {
	return v.value
}

func (v *NullableBaseErrorFieldResponse) Set(val *BaseErrorFieldResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseErrorFieldResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseErrorFieldResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseErrorFieldResponse(val *BaseErrorFieldResponse) *NullableBaseErrorFieldResponse {
	return &NullableBaseErrorFieldResponse{value: val, isSet: true}
}

func (v NullableBaseErrorFieldResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseErrorFieldResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
