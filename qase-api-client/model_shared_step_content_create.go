/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SharedStepContentCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SharedStepContentCreate{}

// SharedStepContentCreate struct for SharedStepContentCreate
type SharedStepContentCreate struct {
	Hash           *string `json:"hash,omitempty"`
	Action         string  `json:"action"`
	ExpectedResult *string `json:"expected_result,omitempty"`
	Data           *string `json:"data,omitempty"`
	// A list of Attachment hashes.
	Attachments []string `json:"attachments,omitempty"`
}

type _SharedStepContentCreate SharedStepContentCreate

// NewSharedStepContentCreate instantiates a new SharedStepContentCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedStepContentCreate(action string) *SharedStepContentCreate {
	this := SharedStepContentCreate{}
	this.Action = action
	return &this
}

// NewSharedStepContentCreateWithDefaults instantiates a new SharedStepContentCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedStepContentCreateWithDefaults() *SharedStepContentCreate {
	this := SharedStepContentCreate{}
	return &this
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *SharedStepContentCreate) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepContentCreate) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *SharedStepContentCreate) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *SharedStepContentCreate) SetHash(v string) {
	o.Hash = &v
}

// GetAction returns the Action field value
func (o *SharedStepContentCreate) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *SharedStepContentCreate) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *SharedStepContentCreate) SetAction(v string) {
	o.Action = v
}

// GetExpectedResult returns the ExpectedResult field value if set, zero value otherwise.
func (o *SharedStepContentCreate) GetExpectedResult() string {
	if o == nil || IsNil(o.ExpectedResult) {
		var ret string
		return ret
	}
	return *o.ExpectedResult
}

// GetExpectedResultOk returns a tuple with the ExpectedResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepContentCreate) GetExpectedResultOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedResult) {
		return nil, false
	}
	return o.ExpectedResult, true
}

// HasExpectedResult returns a boolean if a field has been set.
func (o *SharedStepContentCreate) HasExpectedResult() bool {
	if o != nil && !IsNil(o.ExpectedResult) {
		return true
	}

	return false
}

// SetExpectedResult gets a reference to the given string and assigns it to the ExpectedResult field.
func (o *SharedStepContentCreate) SetExpectedResult(v string) {
	o.ExpectedResult = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SharedStepContentCreate) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepContentCreate) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SharedStepContentCreate) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *SharedStepContentCreate) SetData(v string) {
	o.Data = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *SharedStepContentCreate) GetAttachments() []string {
	if o == nil || IsNil(o.Attachments) {
		var ret []string
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepContentCreate) GetAttachmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *SharedStepContentCreate) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []string and assigns it to the Attachments field.
func (o *SharedStepContentCreate) SetAttachments(v []string) {
	o.Attachments = v
}

func (o SharedStepContentCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharedStepContentCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	toSerialize["action"] = o.Action
	if !IsNil(o.ExpectedResult) {
		toSerialize["expected_result"] = o.ExpectedResult
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	return toSerialize, nil
}

func (o *SharedStepContentCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSharedStepContentCreate := _SharedStepContentCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSharedStepContentCreate)

	if err != nil {
		return err
	}

	*o = SharedStepContentCreate(varSharedStepContentCreate)

	return err
}

type NullableSharedStepContentCreate struct {
	value *SharedStepContentCreate
	isSet bool
}

func (v NullableSharedStepContentCreate) Get() *SharedStepContentCreate {
	return v.value
}

func (v *NullableSharedStepContentCreate) Set(val *SharedStepContentCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedStepContentCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedStepContentCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedStepContentCreate(val *SharedStepContentCreate) *NullableSharedStepContentCreate {
	return &NullableSharedStepContentCreate{value: val, isSet: true}
}

func (v NullableSharedStepContentCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedStepContentCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
