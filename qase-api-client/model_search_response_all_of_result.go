/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SearchResponseAllOfResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchResponseAllOfResult{}

// SearchResponseAllOfResult struct for SearchResponseAllOfResult
type SearchResponseAllOfResult struct {
	Entities []SearchResponseAllOfResultEntities `json:"entities"`
	Total    int32                               `json:"total"`
}

type _SearchResponseAllOfResult SearchResponseAllOfResult

// NewSearchResponseAllOfResult instantiates a new SearchResponseAllOfResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResponseAllOfResult(entities []SearchResponseAllOfResultEntities, total int32) *SearchResponseAllOfResult {
	this := SearchResponseAllOfResult{}
	this.Entities = entities
	this.Total = total
	return &this
}

// NewSearchResponseAllOfResultWithDefaults instantiates a new SearchResponseAllOfResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResponseAllOfResultWithDefaults() *SearchResponseAllOfResult {
	this := SearchResponseAllOfResult{}
	return &this
}

// GetEntities returns the Entities field value
func (o *SearchResponseAllOfResult) GetEntities() []SearchResponseAllOfResultEntities {
	if o == nil {
		var ret []SearchResponseAllOfResultEntities
		return ret
	}

	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value
// and a boolean to check if the value has been set.
func (o *SearchResponseAllOfResult) GetEntitiesOk() ([]SearchResponseAllOfResultEntities, bool) {
	if o == nil {
		return nil, false
	}
	return o.Entities, true
}

// SetEntities sets field value
func (o *SearchResponseAllOfResult) SetEntities(v []SearchResponseAllOfResultEntities) {
	o.Entities = v
}

// GetTotal returns the Total field value
func (o *SearchResponseAllOfResult) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *SearchResponseAllOfResult) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *SearchResponseAllOfResult) SetTotal(v int32) {
	o.Total = v
}

func (o SearchResponseAllOfResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchResponseAllOfResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entities"] = o.Entities
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

func (o *SearchResponseAllOfResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entities",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchResponseAllOfResult := _SearchResponseAllOfResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSearchResponseAllOfResult)

	if err != nil {
		return err
	}

	*o = SearchResponseAllOfResult(varSearchResponseAllOfResult)

	return err
}

type NullableSearchResponseAllOfResult struct {
	value *SearchResponseAllOfResult
	isSet bool
}

func (v NullableSearchResponseAllOfResult) Get() *SearchResponseAllOfResult {
	return v.value
}

func (v *NullableSearchResponseAllOfResult) Set(val *SearchResponseAllOfResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResponseAllOfResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResponseAllOfResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResponseAllOfResult(val *SearchResponseAllOfResult) *NullableSearchResponseAllOfResult {
	return &NullableSearchResponseAllOfResult{value: val, isSet: true}
}

func (v NullableSearchResponseAllOfResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResponseAllOfResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
