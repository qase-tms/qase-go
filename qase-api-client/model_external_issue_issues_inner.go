/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"encoding/json"
)

// checks if the ExternalIssueIssuesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalIssueIssuesInner{}

// ExternalIssueIssuesInner struct for ExternalIssueIssuesInner
type ExternalIssueIssuesInner struct {
	Id   *string `json:"id,omitempty"`
	Link *string `json:"link,omitempty"`
}

// NewExternalIssueIssuesInner instantiates a new ExternalIssueIssuesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalIssueIssuesInner() *ExternalIssueIssuesInner {
	this := ExternalIssueIssuesInner{}
	return &this
}

// NewExternalIssueIssuesInnerWithDefaults instantiates a new ExternalIssueIssuesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalIssueIssuesInnerWithDefaults() *ExternalIssueIssuesInner {
	this := ExternalIssueIssuesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExternalIssueIssuesInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalIssueIssuesInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExternalIssueIssuesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ExternalIssueIssuesInner) SetId(v string) {
	o.Id = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *ExternalIssueIssuesInner) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalIssueIssuesInner) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *ExternalIssueIssuesInner) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *ExternalIssueIssuesInner) SetLink(v string) {
	o.Link = &v
}

func (o ExternalIssueIssuesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalIssueIssuesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	return toSerialize, nil
}

type NullableExternalIssueIssuesInner struct {
	value *ExternalIssueIssuesInner
	isSet bool
}

func (v NullableExternalIssueIssuesInner) Get() *ExternalIssueIssuesInner {
	return v.value
}

func (v *NullableExternalIssueIssuesInner) Set(val *ExternalIssueIssuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalIssueIssuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalIssueIssuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalIssueIssuesInner(val *ExternalIssueIssuesInner) *NullableExternalIssueIssuesInner {
	return &NullableExternalIssueIssuesInner{value: val, isSet: true}
}

func (v NullableExternalIssueIssuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalIssueIssuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
