/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SuiteCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuiteCreate{}

// SuiteCreate struct for SuiteCreate
type SuiteCreate struct {
	// Test suite title.
	Title string `json:"title"`
	// Test suite description.
	Description *string `json:"description,omitempty"`
	// Test suite preconditions
	Preconditions *string `json:"preconditions,omitempty"`
	// Parent suite ID
	ParentId NullableInt64 `json:"parent_id,omitempty"`
}

type _SuiteCreate SuiteCreate

// NewSuiteCreate instantiates a new SuiteCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuiteCreate(title string) *SuiteCreate {
	this := SuiteCreate{}
	this.Title = title
	return &this
}

// NewSuiteCreateWithDefaults instantiates a new SuiteCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuiteCreateWithDefaults() *SuiteCreate {
	this := SuiteCreate{}
	return &this
}

// GetTitle returns the Title field value
func (o *SuiteCreate) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *SuiteCreate) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *SuiteCreate) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SuiteCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuiteCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SuiteCreate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SuiteCreate) SetDescription(v string) {
	o.Description = &v
}

// GetPreconditions returns the Preconditions field value if set, zero value otherwise.
func (o *SuiteCreate) GetPreconditions() string {
	if o == nil || IsNil(o.Preconditions) {
		var ret string
		return ret
	}
	return *o.Preconditions
}

// GetPreconditionsOk returns a tuple with the Preconditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuiteCreate) GetPreconditionsOk() (*string, bool) {
	if o == nil || IsNil(o.Preconditions) {
		return nil, false
	}
	return o.Preconditions, true
}

// HasPreconditions returns a boolean if a field has been set.
func (o *SuiteCreate) HasPreconditions() bool {
	if o != nil && !IsNil(o.Preconditions) {
		return true
	}

	return false
}

// SetPreconditions gets a reference to the given string and assigns it to the Preconditions field.
func (o *SuiteCreate) SetPreconditions(v string) {
	o.Preconditions = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SuiteCreate) GetParentId() int64 {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret int64
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SuiteCreate) GetParentIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *SuiteCreate) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableInt64 and assigns it to the ParentId field.
func (o *SuiteCreate) SetParentId(v int64) {
	o.ParentId.Set(&v)
}

// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *SuiteCreate) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *SuiteCreate) UnsetParentId() {
	o.ParentId.Unset()
}

func (o SuiteCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuiteCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Preconditions) {
		toSerialize["preconditions"] = o.Preconditions
	}
	if o.ParentId.IsSet() {
		toSerialize["parent_id"] = o.ParentId.Get()
	}
	return toSerialize, nil
}

func (o *SuiteCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSuiteCreate := _SuiteCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSuiteCreate)

	if err != nil {
		return err
	}

	*o = SuiteCreate(varSuiteCreate)

	return err
}

type NullableSuiteCreate struct {
	value *SuiteCreate
	isSet bool
}

func (v NullableSuiteCreate) Get() *SuiteCreate {
	return v.value
}

func (v *NullableSuiteCreate) Set(val *SuiteCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableSuiteCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableSuiteCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuiteCreate(val *SuiteCreate) *NullableSuiteCreate {
	return &NullableSuiteCreate{value: val, isSet: true}
}

func (v NullableSuiteCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuiteCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
