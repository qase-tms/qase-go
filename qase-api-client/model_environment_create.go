/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the EnvironmentCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentCreate{}

// EnvironmentCreate struct for EnvironmentCreate
type EnvironmentCreate struct {
	Title       string  `json:"title"`
	Description *string `json:"description,omitempty"`
	Slug        string  `json:"slug"`
	Host        *string `json:"host,omitempty"`
}

type _EnvironmentCreate EnvironmentCreate

// NewEnvironmentCreate instantiates a new EnvironmentCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentCreate(title string, slug string) *EnvironmentCreate {
	this := EnvironmentCreate{}
	this.Title = title
	this.Slug = slug
	return &this
}

// NewEnvironmentCreateWithDefaults instantiates a new EnvironmentCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentCreateWithDefaults() *EnvironmentCreate {
	this := EnvironmentCreate{}
	return &this
}

// GetTitle returns the Title field value
func (o *EnvironmentCreate) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *EnvironmentCreate) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *EnvironmentCreate) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EnvironmentCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EnvironmentCreate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EnvironmentCreate) SetDescription(v string) {
	o.Description = &v
}

// GetSlug returns the Slug field value
func (o *EnvironmentCreate) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *EnvironmentCreate) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *EnvironmentCreate) SetSlug(v string) {
	o.Slug = v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *EnvironmentCreate) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreate) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *EnvironmentCreate) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *EnvironmentCreate) SetHost(v string) {
	o.Host = &v
}

func (o EnvironmentCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["slug"] = o.Slug
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	return toSerialize, nil
}

func (o *EnvironmentCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"slug",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnvironmentCreate := _EnvironmentCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnvironmentCreate)

	if err != nil {
		return err
	}

	*o = EnvironmentCreate(varEnvironmentCreate)

	return err
}

type NullableEnvironmentCreate struct {
	value *EnvironmentCreate
	isSet bool
}

func (v NullableEnvironmentCreate) Get() *EnvironmentCreate {
	return v.value
}

func (v *NullableEnvironmentCreate) Set(val *EnvironmentCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentCreate(val *EnvironmentCreate) *NullableEnvironmentCreate {
	return &NullableEnvironmentCreate{value: val, isSet: true}
}

func (v NullableEnvironmentCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
