/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"encoding/json"
)

// checks if the Bulk200ResponseAllOfResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Bulk200ResponseAllOfResult{}

// Bulk200ResponseAllOfResult struct for Bulk200ResponseAllOfResult
type Bulk200ResponseAllOfResult struct {
	Ids []int32 `json:"ids,omitempty"`
}

// NewBulk200ResponseAllOfResult instantiates a new Bulk200ResponseAllOfResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulk200ResponseAllOfResult() *Bulk200ResponseAllOfResult {
	this := Bulk200ResponseAllOfResult{}
	return &this
}

// NewBulk200ResponseAllOfResultWithDefaults instantiates a new Bulk200ResponseAllOfResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulk200ResponseAllOfResultWithDefaults() *Bulk200ResponseAllOfResult {
	this := Bulk200ResponseAllOfResult{}
	return &this
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *Bulk200ResponseAllOfResult) GetIds() []int32 {
	if o == nil || IsNil(o.Ids) {
		var ret []int32
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bulk200ResponseAllOfResult) GetIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *Bulk200ResponseAllOfResult) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []int32 and assigns it to the Ids field.
func (o *Bulk200ResponseAllOfResult) SetIds(v []int32) {
	o.Ids = v
}

func (o Bulk200ResponseAllOfResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Bulk200ResponseAllOfResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	return toSerialize, nil
}

type NullableBulk200ResponseAllOfResult struct {
	value *Bulk200ResponseAllOfResult
	isSet bool
}

func (v NullableBulk200ResponseAllOfResult) Get() *Bulk200ResponseAllOfResult {
	return v.value
}

func (v *NullableBulk200ResponseAllOfResult) Set(val *Bulk200ResponseAllOfResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBulk200ResponseAllOfResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBulk200ResponseAllOfResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulk200ResponseAllOfResult(val *Bulk200ResponseAllOfResult) *NullableBulk200ResponseAllOfResult {
	return &NullableBulk200ResponseAllOfResult{value: val, isSet: true}
}

func (v NullableBulk200ResponseAllOfResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulk200ResponseAllOfResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
