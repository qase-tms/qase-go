/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RunExternalIssuesLinksInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunExternalIssuesLinksInner{}

// RunExternalIssuesLinksInner struct for RunExternalIssuesLinksInner
type RunExternalIssuesLinksInner struct {
	RunId int64 `json:"run_id"`
	// An external issue identifier, e.g. \"PROJ-1234\". Or null if you want to remove the link.
	ExternalIssue NullableString `json:"external_issue,omitempty"`
}

type _RunExternalIssuesLinksInner RunExternalIssuesLinksInner

// NewRunExternalIssuesLinksInner instantiates a new RunExternalIssuesLinksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunExternalIssuesLinksInner(runId int64) *RunExternalIssuesLinksInner {
	this := RunExternalIssuesLinksInner{}
	this.RunId = runId
	return &this
}

// NewRunExternalIssuesLinksInnerWithDefaults instantiates a new RunExternalIssuesLinksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunExternalIssuesLinksInnerWithDefaults() *RunExternalIssuesLinksInner {
	this := RunExternalIssuesLinksInner{}
	return &this
}

// GetRunId returns the RunId field value
func (o *RunExternalIssuesLinksInner) GetRunId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RunId
}

// GetRunIdOk returns a tuple with the RunId field value
// and a boolean to check if the value has been set.
func (o *RunExternalIssuesLinksInner) GetRunIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunId, true
}

// SetRunId sets field value
func (o *RunExternalIssuesLinksInner) SetRunId(v int64) {
	o.RunId = v
}

// GetExternalIssue returns the ExternalIssue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunExternalIssuesLinksInner) GetExternalIssue() string {
	if o == nil || IsNil(o.ExternalIssue.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalIssue.Get()
}

// GetExternalIssueOk returns a tuple with the ExternalIssue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunExternalIssuesLinksInner) GetExternalIssueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalIssue.Get(), o.ExternalIssue.IsSet()
}

// HasExternalIssue returns a boolean if a field has been set.
func (o *RunExternalIssuesLinksInner) HasExternalIssue() bool {
	if o != nil && o.ExternalIssue.IsSet() {
		return true
	}

	return false
}

// SetExternalIssue gets a reference to the given NullableString and assigns it to the ExternalIssue field.
func (o *RunExternalIssuesLinksInner) SetExternalIssue(v string) {
	o.ExternalIssue.Set(&v)
}

// SetExternalIssueNil sets the value for ExternalIssue to be an explicit nil
func (o *RunExternalIssuesLinksInner) SetExternalIssueNil() {
	o.ExternalIssue.Set(nil)
}

// UnsetExternalIssue ensures that no value is present for ExternalIssue, not even an explicit nil
func (o *RunExternalIssuesLinksInner) UnsetExternalIssue() {
	o.ExternalIssue.Unset()
}

func (o RunExternalIssuesLinksInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunExternalIssuesLinksInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["run_id"] = o.RunId
	if o.ExternalIssue.IsSet() {
		toSerialize["external_issue"] = o.ExternalIssue.Get()
	}
	return toSerialize, nil
}

func (o *RunExternalIssuesLinksInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"run_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRunExternalIssuesLinksInner := _RunExternalIssuesLinksInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRunExternalIssuesLinksInner)

	if err != nil {
		return err
	}

	*o = RunExternalIssuesLinksInner(varRunExternalIssuesLinksInner)

	return err
}

type NullableRunExternalIssuesLinksInner struct {
	value *RunExternalIssuesLinksInner
	isSet bool
}

func (v NullableRunExternalIssuesLinksInner) Get() *RunExternalIssuesLinksInner {
	return v.value
}

func (v *NullableRunExternalIssuesLinksInner) Set(val *RunExternalIssuesLinksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRunExternalIssuesLinksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRunExternalIssuesLinksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunExternalIssuesLinksInner(val *RunExternalIssuesLinksInner) *NullableRunExternalIssuesLinksInner {
	return &NullableRunExternalIssuesLinksInner{value: val, isSet: true}
}

func (v NullableRunExternalIssuesLinksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunExternalIssuesLinksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
