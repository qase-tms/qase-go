/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ParameterShared type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterShared{}

// ParameterShared Shared parameter
type ParameterShared struct {
	SharedId string `json:"shared_id"`
}

type _ParameterShared ParameterShared

// NewParameterShared instantiates a new ParameterShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterShared(sharedId string) *ParameterShared {
	this := ParameterShared{}
	this.SharedId = sharedId
	return &this
}

// NewParameterSharedWithDefaults instantiates a new ParameterShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterSharedWithDefaults() *ParameterShared {
	this := ParameterShared{}
	return &this
}

// GetSharedId returns the SharedId field value
func (o *ParameterShared) GetSharedId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SharedId
}

// GetSharedIdOk returns a tuple with the SharedId field value
// and a boolean to check if the value has been set.
func (o *ParameterShared) GetSharedIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharedId, true
}

// SetSharedId sets field value
func (o *ParameterShared) SetSharedId(v string) {
	o.SharedId = v
}

func (o ParameterShared) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterShared) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["shared_id"] = o.SharedId
	return toSerialize, nil
}

func (o *ParameterShared) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"shared_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParameterShared := _ParameterShared{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParameterShared)

	if err != nil {
		return err
	}

	*o = ParameterShared(varParameterShared)

	return err
}

type NullableParameterShared struct {
	value *ParameterShared
	isSet bool
}

func (v NullableParameterShared) Get() *ParameterShared {
	return v.value
}

func (v *NullableParameterShared) Set(val *ParameterShared) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterShared) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterShared(val *ParameterShared) *NullableParameterShared {
	return &NullableParameterShared{value: val, isSet: true}
}

func (v NullableParameterShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
