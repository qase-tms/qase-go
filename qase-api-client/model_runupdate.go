/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"encoding/json"
)

// checks if the Runupdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Runupdate{}

// Runupdate struct for Runupdate
type Runupdate struct {
	Title           *string        `json:"title,omitempty"`
	Description     NullableString `json:"description,omitempty"`
	EnvironmentId   NullableInt64  `json:"environment_id,omitempty"`
	EnvironmentSlug NullableString `json:"environment_slug,omitempty"`
	MilestoneId     NullableInt64  `json:"milestone_id,omitempty"`
	Tags            []string       `json:"tags,omitempty"`
	Configurations  []int64        `json:"configurations,omitempty"`
	// A map of custom fields values (id => value)
	CustomField map[string]string `json:"custom_field,omitempty"`
}

// NewRunupdate instantiates a new Runupdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunupdate() *Runupdate {
	this := Runupdate{}
	return &this
}

// NewRunupdateWithDefaults instantiates a new Runupdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunupdateWithDefaults() *Runupdate {
	this := Runupdate{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Runupdate) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Runupdate) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Runupdate) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Runupdate) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Runupdate) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Runupdate) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *Runupdate) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *Runupdate) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *Runupdate) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *Runupdate) UnsetDescription() {
	o.Description.Unset()
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Runupdate) GetEnvironmentId() int64 {
	if o == nil || IsNil(o.EnvironmentId.Get()) {
		var ret int64
		return ret
	}
	return *o.EnvironmentId.Get()
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Runupdate) GetEnvironmentIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnvironmentId.Get(), o.EnvironmentId.IsSet()
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *Runupdate) HasEnvironmentId() bool {
	if o != nil && o.EnvironmentId.IsSet() {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given NullableInt64 and assigns it to the EnvironmentId field.
func (o *Runupdate) SetEnvironmentId(v int64) {
	o.EnvironmentId.Set(&v)
}

// SetEnvironmentIdNil sets the value for EnvironmentId to be an explicit nil
func (o *Runupdate) SetEnvironmentIdNil() {
	o.EnvironmentId.Set(nil)
}

// UnsetEnvironmentId ensures that no value is present for EnvironmentId, not even an explicit nil
func (o *Runupdate) UnsetEnvironmentId() {
	o.EnvironmentId.Unset()
}

// GetEnvironmentSlug returns the EnvironmentSlug field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Runupdate) GetEnvironmentSlug() string {
	if o == nil || IsNil(o.EnvironmentSlug.Get()) {
		var ret string
		return ret
	}
	return *o.EnvironmentSlug.Get()
}

// GetEnvironmentSlugOk returns a tuple with the EnvironmentSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Runupdate) GetEnvironmentSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnvironmentSlug.Get(), o.EnvironmentSlug.IsSet()
}

// HasEnvironmentSlug returns a boolean if a field has been set.
func (o *Runupdate) HasEnvironmentSlug() bool {
	if o != nil && o.EnvironmentSlug.IsSet() {
		return true
	}

	return false
}

// SetEnvironmentSlug gets a reference to the given NullableString and assigns it to the EnvironmentSlug field.
func (o *Runupdate) SetEnvironmentSlug(v string) {
	o.EnvironmentSlug.Set(&v)
}

// SetEnvironmentSlugNil sets the value for EnvironmentSlug to be an explicit nil
func (o *Runupdate) SetEnvironmentSlugNil() {
	o.EnvironmentSlug.Set(nil)
}

// UnsetEnvironmentSlug ensures that no value is present for EnvironmentSlug, not even an explicit nil
func (o *Runupdate) UnsetEnvironmentSlug() {
	o.EnvironmentSlug.Unset()
}

// GetMilestoneId returns the MilestoneId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Runupdate) GetMilestoneId() int64 {
	if o == nil || IsNil(o.MilestoneId.Get()) {
		var ret int64
		return ret
	}
	return *o.MilestoneId.Get()
}

// GetMilestoneIdOk returns a tuple with the MilestoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Runupdate) GetMilestoneIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MilestoneId.Get(), o.MilestoneId.IsSet()
}

// HasMilestoneId returns a boolean if a field has been set.
func (o *Runupdate) HasMilestoneId() bool {
	if o != nil && o.MilestoneId.IsSet() {
		return true
	}

	return false
}

// SetMilestoneId gets a reference to the given NullableInt64 and assigns it to the MilestoneId field.
func (o *Runupdate) SetMilestoneId(v int64) {
	o.MilestoneId.Set(&v)
}

// SetMilestoneIdNil sets the value for MilestoneId to be an explicit nil
func (o *Runupdate) SetMilestoneIdNil() {
	o.MilestoneId.Set(nil)
}

// UnsetMilestoneId ensures that no value is present for MilestoneId, not even an explicit nil
func (o *Runupdate) UnsetMilestoneId() {
	o.MilestoneId.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Runupdate) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Runupdate) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Runupdate) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Runupdate) SetTags(v []string) {
	o.Tags = v
}

// GetConfigurations returns the Configurations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Runupdate) GetConfigurations() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.Configurations
}

// GetConfigurationsOk returns a tuple with the Configurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Runupdate) GetConfigurationsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Configurations) {
		return nil, false
	}
	return o.Configurations, true
}

// HasConfigurations returns a boolean if a field has been set.
func (o *Runupdate) HasConfigurations() bool {
	if o != nil && !IsNil(o.Configurations) {
		return true
	}

	return false
}

// SetConfigurations gets a reference to the given []int64 and assigns it to the Configurations field.
func (o *Runupdate) SetConfigurations(v []int64) {
	o.Configurations = v
}

// GetCustomField returns the CustomField field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Runupdate) GetCustomField() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.CustomField
}

// GetCustomFieldOk returns a tuple with the CustomField field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Runupdate) GetCustomFieldOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomField) {
		return nil, false
	}
	return &o.CustomField, true
}

// HasCustomField returns a boolean if a field has been set.
func (o *Runupdate) HasCustomField() bool {
	if o != nil && !IsNil(o.CustomField) {
		return true
	}

	return false
}

// SetCustomField gets a reference to the given map[string]string and assigns it to the CustomField field.
func (o *Runupdate) SetCustomField(v map[string]string) {
	o.CustomField = v
}

func (o Runupdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Runupdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.EnvironmentId.IsSet() {
		toSerialize["environment_id"] = o.EnvironmentId.Get()
	}
	if o.EnvironmentSlug.IsSet() {
		toSerialize["environment_slug"] = o.EnvironmentSlug.Get()
	}
	if o.MilestoneId.IsSet() {
		toSerialize["milestone_id"] = o.MilestoneId.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Configurations != nil {
		toSerialize["configurations"] = o.Configurations
	}
	if o.CustomField != nil {
		toSerialize["custom_field"] = o.CustomField
	}
	return toSerialize, nil
}

type NullableRunupdate struct {
	value *Runupdate
	isSet bool
}

func (v NullableRunupdate) Get() *Runupdate {
	return v.value
}

func (v *NullableRunupdate) Set(val *Runupdate) {
	v.value = val
	v.isSet = true
}

func (v NullableRunupdate) IsSet() bool {
	return v.isSet
}

func (v *NullableRunupdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunupdate(val *Runupdate) *NullableRunupdate {
	return &NullableRunupdate{value: val, isSet: true}
}

func (v NullableRunupdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunupdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
