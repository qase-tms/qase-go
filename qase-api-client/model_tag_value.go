/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"encoding/json"
)

// checks if the TagValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagValue{}

// TagValue struct for TagValue
type TagValue struct {
	Title      *string `json:"title,omitempty"`
	InternalId *int64  `json:"internal_id,omitempty"`
}

// NewTagValue instantiates a new TagValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagValue() *TagValue {
	this := TagValue{}
	return &this
}

// NewTagValueWithDefaults instantiates a new TagValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagValueWithDefaults() *TagValue {
	this := TagValue{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *TagValue) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagValue) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *TagValue) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *TagValue) SetTitle(v string) {
	o.Title = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *TagValue) GetInternalId() int64 {
	if o == nil || IsNil(o.InternalId) {
		var ret int64
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagValue) GetInternalIdOk() (*int64, bool) {
	if o == nil || IsNil(o.InternalId) {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *TagValue) HasInternalId() bool {
	if o != nil && !IsNil(o.InternalId) {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given int64 and assigns it to the InternalId field.
func (o *TagValue) SetInternalId(v int64) {
	o.InternalId = &v
}

func (o TagValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.InternalId) {
		toSerialize["internal_id"] = o.InternalId
	}
	return toSerialize, nil
}

type NullableTagValue struct {
	value *TagValue
	isSet bool
}

func (v NullableTagValue) Get() *TagValue {
	return v.value
}

func (v *NullableTagValue) Set(val *TagValue) {
	v.value = val
	v.isSet = true
}

func (v NullableTagValue) IsSet() bool {
	return v.isSet
}

func (v *NullableTagValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagValue(val *TagValue) *NullableTagValue {
	return &NullableTagValue{value: val, isSet: true}
}

func (v NullableTagValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
