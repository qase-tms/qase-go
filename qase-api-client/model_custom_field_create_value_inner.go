/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"encoding/json"
)

// checks if the CustomFieldCreateValueInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomFieldCreateValueInner{}

// CustomFieldCreateValueInner struct for CustomFieldCreateValueInner
type CustomFieldCreateValueInner struct {
	Id    *int64  `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewCustomFieldCreateValueInner instantiates a new CustomFieldCreateValueInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomFieldCreateValueInner() *CustomFieldCreateValueInner {
	this := CustomFieldCreateValueInner{}
	return &this
}

// NewCustomFieldCreateValueInnerWithDefaults instantiates a new CustomFieldCreateValueInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFieldCreateValueInnerWithDefaults() *CustomFieldCreateValueInner {
	this := CustomFieldCreateValueInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomFieldCreateValueInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldCreateValueInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomFieldCreateValueInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CustomFieldCreateValueInner) SetId(v int64) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CustomFieldCreateValueInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomFieldCreateValueInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CustomFieldCreateValueInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CustomFieldCreateValueInner) SetTitle(v string) {
	o.Title = &v
}

func (o CustomFieldCreateValueInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomFieldCreateValueInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableCustomFieldCreateValueInner struct {
	value *CustomFieldCreateValueInner
	isSet bool
}

func (v NullableCustomFieldCreateValueInner) Get() *CustomFieldCreateValueInner {
	return v.value
}

func (v *NullableCustomFieldCreateValueInner) Set(val *CustomFieldCreateValueInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFieldCreateValueInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFieldCreateValueInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFieldCreateValueInner(val *CustomFieldCreateValueInner) *NullableCustomFieldCreateValueInner {
	return &NullableCustomFieldCreateValueInner{value: val, isSet: true}
}

func (v NullableCustomFieldCreateValueInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFieldCreateValueInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
