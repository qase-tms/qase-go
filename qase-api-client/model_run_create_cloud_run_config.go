/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"encoding/json"
)

// checks if the RunCreateCloudRunConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunCreateCloudRunConfig{}

// RunCreateCloudRunConfig Configuration for the cloud run, if applicable
type RunCreateCloudRunConfig struct {
	// The browser to be used for the cloud run
	Browser *string `json:"browser,omitempty"`
}

// NewRunCreateCloudRunConfig instantiates a new RunCreateCloudRunConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunCreateCloudRunConfig() *RunCreateCloudRunConfig {
	this := RunCreateCloudRunConfig{}
	return &this
}

// NewRunCreateCloudRunConfigWithDefaults instantiates a new RunCreateCloudRunConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunCreateCloudRunConfigWithDefaults() *RunCreateCloudRunConfig {
	this := RunCreateCloudRunConfig{}
	return &this
}

// GetBrowser returns the Browser field value if set, zero value otherwise.
func (o *RunCreateCloudRunConfig) GetBrowser() string {
	if o == nil || IsNil(o.Browser) {
		var ret string
		return ret
	}
	return *o.Browser
}

// GetBrowserOk returns a tuple with the Browser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreateCloudRunConfig) GetBrowserOk() (*string, bool) {
	if o == nil || IsNil(o.Browser) {
		return nil, false
	}
	return o.Browser, true
}

// HasBrowser returns a boolean if a field has been set.
func (o *RunCreateCloudRunConfig) HasBrowser() bool {
	if o != nil && !IsNil(o.Browser) {
		return true
	}

	return false
}

// SetBrowser gets a reference to the given string and assigns it to the Browser field.
func (o *RunCreateCloudRunConfig) SetBrowser(v string) {
	o.Browser = &v
}

func (o RunCreateCloudRunConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunCreateCloudRunConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Browser) {
		toSerialize["browser"] = o.Browser
	}
	return toSerialize, nil
}

type NullableRunCreateCloudRunConfig struct {
	value *RunCreateCloudRunConfig
	isSet bool
}

func (v NullableRunCreateCloudRunConfig) Get() *RunCreateCloudRunConfig {
	return v.value
}

func (v *NullableRunCreateCloudRunConfig) Set(val *RunCreateCloudRunConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRunCreateCloudRunConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRunCreateCloudRunConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunCreateCloudRunConfig(val *RunCreateCloudRunConfig) *NullableRunCreateCloudRunConfig {
	return &NullableRunCreateCloudRunConfig{value: val, isSet: true}
}

func (v NullableRunCreateCloudRunConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunCreateCloudRunConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
