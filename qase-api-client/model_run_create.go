/*
Qase.io TestOps API v1

Qase TestOps API v1 Specification.

API version: 1.0.0
Contact: support@qase.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v1_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RunCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunCreate{}

// RunCreate struct for RunCreate
type RunCreate struct {
	Title           string   `json:"title"`
	Description     *string  `json:"description,omitempty"`
	IncludeAllCases *bool    `json:"include_all_cases,omitempty"`
	Cases           []int64  `json:"cases,omitempty"`
	IsAutotest      *bool    `json:"is_autotest,omitempty"`
	EnvironmentId   *int64   `json:"environment_id,omitempty"`
	EnvironmentSlug *string  `json:"environment_slug,omitempty"`
	MilestoneId     *int64   `json:"milestone_id,omitempty"`
	PlanId          *int64   `json:"plan_id,omitempty"`
	AuthorId        *int64   `json:"author_id,omitempty"`
	Tags            []string `json:"tags,omitempty"`
	Configurations  []int64  `json:"configurations,omitempty"`
	// A map of custom fields values (id => value)
	CustomField *map[string]string `json:"custom_field,omitempty"`
	StartTime   *string            `json:"start_time,omitempty"`
	EndTime     *string            `json:"end_time,omitempty"`
	// Indicates if the run is created for the Test Cases produced by AIDEN
	IsCloud        *bool                    `json:"is_cloud,omitempty"`
	CloudRunConfig *RunCreateCloudRunConfig `json:"cloud_run_config,omitempty"`
}

type _RunCreate RunCreate

// NewRunCreate instantiates a new RunCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunCreate(title string) *RunCreate {
	this := RunCreate{}
	this.Title = title
	return &this
}

// NewRunCreateWithDefaults instantiates a new RunCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunCreateWithDefaults() *RunCreate {
	this := RunCreate{}
	return &this
}

// GetTitle returns the Title field value
func (o *RunCreate) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *RunCreate) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *RunCreate) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RunCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RunCreate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RunCreate) SetDescription(v string) {
	o.Description = &v
}

// GetIncludeAllCases returns the IncludeAllCases field value if set, zero value otherwise.
func (o *RunCreate) GetIncludeAllCases() bool {
	if o == nil || IsNil(o.IncludeAllCases) {
		var ret bool
		return ret
	}
	return *o.IncludeAllCases
}

// GetIncludeAllCasesOk returns a tuple with the IncludeAllCases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetIncludeAllCasesOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeAllCases) {
		return nil, false
	}
	return o.IncludeAllCases, true
}

// HasIncludeAllCases returns a boolean if a field has been set.
func (o *RunCreate) HasIncludeAllCases() bool {
	if o != nil && !IsNil(o.IncludeAllCases) {
		return true
	}

	return false
}

// SetIncludeAllCases gets a reference to the given bool and assigns it to the IncludeAllCases field.
func (o *RunCreate) SetIncludeAllCases(v bool) {
	o.IncludeAllCases = &v
}

// GetCases returns the Cases field value if set, zero value otherwise.
func (o *RunCreate) GetCases() []int64 {
	if o == nil || IsNil(o.Cases) {
		var ret []int64
		return ret
	}
	return o.Cases
}

// GetCasesOk returns a tuple with the Cases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetCasesOk() ([]int64, bool) {
	if o == nil || IsNil(o.Cases) {
		return nil, false
	}
	return o.Cases, true
}

// HasCases returns a boolean if a field has been set.
func (o *RunCreate) HasCases() bool {
	if o != nil && !IsNil(o.Cases) {
		return true
	}

	return false
}

// SetCases gets a reference to the given []int64 and assigns it to the Cases field.
func (o *RunCreate) SetCases(v []int64) {
	o.Cases = v
}

// GetIsAutotest returns the IsAutotest field value if set, zero value otherwise.
func (o *RunCreate) GetIsAutotest() bool {
	if o == nil || IsNil(o.IsAutotest) {
		var ret bool
		return ret
	}
	return *o.IsAutotest
}

// GetIsAutotestOk returns a tuple with the IsAutotest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetIsAutotestOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutotest) {
		return nil, false
	}
	return o.IsAutotest, true
}

// HasIsAutotest returns a boolean if a field has been set.
func (o *RunCreate) HasIsAutotest() bool {
	if o != nil && !IsNil(o.IsAutotest) {
		return true
	}

	return false
}

// SetIsAutotest gets a reference to the given bool and assigns it to the IsAutotest field.
func (o *RunCreate) SetIsAutotest(v bool) {
	o.IsAutotest = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *RunCreate) GetEnvironmentId() int64 {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret int64
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetEnvironmentIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *RunCreate) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given int64 and assigns it to the EnvironmentId field.
func (o *RunCreate) SetEnvironmentId(v int64) {
	o.EnvironmentId = &v
}

// GetEnvironmentSlug returns the EnvironmentSlug field value if set, zero value otherwise.
func (o *RunCreate) GetEnvironmentSlug() string {
	if o == nil || IsNil(o.EnvironmentSlug) {
		var ret string
		return ret
	}
	return *o.EnvironmentSlug
}

// GetEnvironmentSlugOk returns a tuple with the EnvironmentSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetEnvironmentSlugOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentSlug) {
		return nil, false
	}
	return o.EnvironmentSlug, true
}

// HasEnvironmentSlug returns a boolean if a field has been set.
func (o *RunCreate) HasEnvironmentSlug() bool {
	if o != nil && !IsNil(o.EnvironmentSlug) {
		return true
	}

	return false
}

// SetEnvironmentSlug gets a reference to the given string and assigns it to the EnvironmentSlug field.
func (o *RunCreate) SetEnvironmentSlug(v string) {
	o.EnvironmentSlug = &v
}

// GetMilestoneId returns the MilestoneId field value if set, zero value otherwise.
func (o *RunCreate) GetMilestoneId() int64 {
	if o == nil || IsNil(o.MilestoneId) {
		var ret int64
		return ret
	}
	return *o.MilestoneId
}

// GetMilestoneIdOk returns a tuple with the MilestoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetMilestoneIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MilestoneId) {
		return nil, false
	}
	return o.MilestoneId, true
}

// HasMilestoneId returns a boolean if a field has been set.
func (o *RunCreate) HasMilestoneId() bool {
	if o != nil && !IsNil(o.MilestoneId) {
		return true
	}

	return false
}

// SetMilestoneId gets a reference to the given int64 and assigns it to the MilestoneId field.
func (o *RunCreate) SetMilestoneId(v int64) {
	o.MilestoneId = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *RunCreate) GetPlanId() int64 {
	if o == nil || IsNil(o.PlanId) {
		var ret int64
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetPlanIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *RunCreate) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given int64 and assigns it to the PlanId field.
func (o *RunCreate) SetPlanId(v int64) {
	o.PlanId = &v
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *RunCreate) GetAuthorId() int64 {
	if o == nil || IsNil(o.AuthorId) {
		var ret int64
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetAuthorIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AuthorId) {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *RunCreate) HasAuthorId() bool {
	if o != nil && !IsNil(o.AuthorId) {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given int64 and assigns it to the AuthorId field.
func (o *RunCreate) SetAuthorId(v int64) {
	o.AuthorId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *RunCreate) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RunCreate) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *RunCreate) SetTags(v []string) {
	o.Tags = v
}

// GetConfigurations returns the Configurations field value if set, zero value otherwise.
func (o *RunCreate) GetConfigurations() []int64 {
	if o == nil || IsNil(o.Configurations) {
		var ret []int64
		return ret
	}
	return o.Configurations
}

// GetConfigurationsOk returns a tuple with the Configurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetConfigurationsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Configurations) {
		return nil, false
	}
	return o.Configurations, true
}

// HasConfigurations returns a boolean if a field has been set.
func (o *RunCreate) HasConfigurations() bool {
	if o != nil && !IsNil(o.Configurations) {
		return true
	}

	return false
}

// SetConfigurations gets a reference to the given []int64 and assigns it to the Configurations field.
func (o *RunCreate) SetConfigurations(v []int64) {
	o.Configurations = v
}

// GetCustomField returns the CustomField field value if set, zero value otherwise.
func (o *RunCreate) GetCustomField() map[string]string {
	if o == nil || IsNil(o.CustomField) {
		var ret map[string]string
		return ret
	}
	return *o.CustomField
}

// GetCustomFieldOk returns a tuple with the CustomField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetCustomFieldOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomField) {
		return nil, false
	}
	return o.CustomField, true
}

// HasCustomField returns a boolean if a field has been set.
func (o *RunCreate) HasCustomField() bool {
	if o != nil && !IsNil(o.CustomField) {
		return true
	}

	return false
}

// SetCustomField gets a reference to the given map[string]string and assigns it to the CustomField field.
func (o *RunCreate) SetCustomField(v map[string]string) {
	o.CustomField = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *RunCreate) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *RunCreate) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *RunCreate) SetStartTime(v string) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *RunCreate) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *RunCreate) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *RunCreate) SetEndTime(v string) {
	o.EndTime = &v
}

// GetIsCloud returns the IsCloud field value if set, zero value otherwise.
func (o *RunCreate) GetIsCloud() bool {
	if o == nil || IsNil(o.IsCloud) {
		var ret bool
		return ret
	}
	return *o.IsCloud
}

// GetIsCloudOk returns a tuple with the IsCloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetIsCloudOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCloud) {
		return nil, false
	}
	return o.IsCloud, true
}

// HasIsCloud returns a boolean if a field has been set.
func (o *RunCreate) HasIsCloud() bool {
	if o != nil && !IsNil(o.IsCloud) {
		return true
	}

	return false
}

// SetIsCloud gets a reference to the given bool and assigns it to the IsCloud field.
func (o *RunCreate) SetIsCloud(v bool) {
	o.IsCloud = &v
}

// GetCloudRunConfig returns the CloudRunConfig field value if set, zero value otherwise.
func (o *RunCreate) GetCloudRunConfig() RunCreateCloudRunConfig {
	if o == nil || IsNil(o.CloudRunConfig) {
		var ret RunCreateCloudRunConfig
		return ret
	}
	return *o.CloudRunConfig
}

// GetCloudRunConfigOk returns a tuple with the CloudRunConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunCreate) GetCloudRunConfigOk() (*RunCreateCloudRunConfig, bool) {
	if o == nil || IsNil(o.CloudRunConfig) {
		return nil, false
	}
	return o.CloudRunConfig, true
}

// HasCloudRunConfig returns a boolean if a field has been set.
func (o *RunCreate) HasCloudRunConfig() bool {
	if o != nil && !IsNil(o.CloudRunConfig) {
		return true
	}

	return false
}

// SetCloudRunConfig gets a reference to the given RunCreateCloudRunConfig and assigns it to the CloudRunConfig field.
func (o *RunCreate) SetCloudRunConfig(v RunCreateCloudRunConfig) {
	o.CloudRunConfig = &v
}

func (o RunCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IncludeAllCases) {
		toSerialize["include_all_cases"] = o.IncludeAllCases
	}
	if !IsNil(o.Cases) {
		toSerialize["cases"] = o.Cases
	}
	if !IsNil(o.IsAutotest) {
		toSerialize["is_autotest"] = o.IsAutotest
	}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if !IsNil(o.EnvironmentSlug) {
		toSerialize["environment_slug"] = o.EnvironmentSlug
	}
	if !IsNil(o.MilestoneId) {
		toSerialize["milestone_id"] = o.MilestoneId
	}
	if !IsNil(o.PlanId) {
		toSerialize["plan_id"] = o.PlanId
	}
	if !IsNil(o.AuthorId) {
		toSerialize["author_id"] = o.AuthorId
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Configurations) {
		toSerialize["configurations"] = o.Configurations
	}
	if !IsNil(o.CustomField) {
		toSerialize["custom_field"] = o.CustomField
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.IsCloud) {
		toSerialize["is_cloud"] = o.IsCloud
	}
	if !IsNil(o.CloudRunConfig) {
		toSerialize["cloud_run_config"] = o.CloudRunConfig
	}
	return toSerialize, nil
}

func (o *RunCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRunCreate := _RunCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRunCreate)

	if err != nil {
		return err
	}

	*o = RunCreate(varRunCreate)

	return err
}

type NullableRunCreate struct {
	value *RunCreate
	isSet bool
}

func (v NullableRunCreate) Get() *RunCreate {
	return v.value
}

func (v *NullableRunCreate) Set(val *RunCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableRunCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableRunCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunCreate(val *RunCreate) *NullableRunCreate {
	return &NullableRunCreate{value: val, isSet: true}
}

func (v NullableRunCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
